{"version":3,"sources":["components/RoutePoint/RoutePoint.module.css","components/RouteFooter/RouteFooter.module.css","components/RouteList/RouteList.module.css","components/PointsList/PointsList.module.css","components/MapComponent/MapComponent.module.css","components/Main/Main.module.css","components/RoutePointCreater/RoutePointCreater.module.css","components/RoutePoint/RoutePoint.js","components/PointsList/PointsList.js","components/RouteFooter/RouteFooter.js","components/RoutePointCreater/RoutePointCreater.js","components/MarkerList/MarkerList.js","components/RouteList/RouteList.js","components/MapComponent/MapComponent.js","components/Main/Main.js","components/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","point","deleteImg","routeFooter","pointsLength","pointsNotLength","clearCompleted","clearCompletedDisabled","list","pointsList","containerMap","main","wrapper","input","button","buttonDisabled","RoutePoint","props","react_default","a","createElement","className","styles","pointTitle","src","alt","onClick","deletePoint","pointId","PointsList","react_beautiful_dnd_esm","onDragEnd","result","destination","updateListPoints","startIndex","endIndex","Array","from","_result$splice","splice","removed","Object","slicedToArray","updatePoints","points","source","index","droppableId","providerList","ref","innerRef","map","key","id","draggableId","providerPoint","assign","draggableProps","dragHandleProps","components_RoutePoint_RoutePoint","title","placeholder","RouteFooter","clearPointsList","buttons","RoutePointCreater","creatorPointsToEnter","creatorPointsToClick","changeInputValue","inputValue","onKeyPress","type","onChange","value","MarkerList","myMap","geo","geoObjects","add","marker","renderGeoMarker","RouteList","components_RoutePointCreater_RoutePointCreater","components_PointsList_PointsList","components_MarkerList_MarkerList","components_RouteFooter_RouteFooter","length","MapComponent","init","ymaps","window","loadMap","Map","center","zoom","controls","lib_default","url","onLoad","ready","Main","state","addPointToState","_this","setState","concat","toConsumableArray","updatePolyline","deleteGeoObjects","filter","removeAll","getId","reduce","acc","el","Math","max","event","currentTarget","clearInputValue","createNewPoint","newPoint","createNewGeoObject","centerMap","getCenter","newGeoObject","GeoObject","geometry","coordinates","properties","iconContent","balloonContent","preset","draggable","events","createPolyline","getCoordinates","polyline","Polyline","strokeColor","strokeWidth","deletePolyline","addPolylineForMap","remove","newListPoints","components_RouteList_RouteList","this","components_MapComponent_MapComponent","React","Component","App","components_Main_Main","Boolean","location","hostname","match","ReactDOM","render","components_App_App","document","getElementById","navigator","serviceWorker","then","registration","unregister"],"mappings":"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","file":"static/js/main.b3bffd5b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"point\":\"RoutePoint_point__1S96j\",\"deleteImg\":\"RoutePoint_deleteImg__2cBCy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"routeFooter\":\"RouteFooter_routeFooter__1ZpuP\",\"pointsLength\":\"RouteFooter_pointsLength__3ovkC\",\"pointsNotLength\":\"RouteFooter_pointsNotLength__33rdJ\",\"clearCompleted\":\"RouteFooter_clearCompleted__1CUrQ\",\"clearCompletedDisabled\":\"RouteFooter_clearCompletedDisabled__3OH-c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"RouteList_list__3I5Iy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pointsList\":\"PointsList_pointsList__26dkI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerMap\":\"MapComponent_containerMap__33yy0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Main_main__AYp-N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"RoutePointCreater_wrapper__2q9Ab\",\"input\":\"RoutePointCreater_input__2ucDW\",\"button\":\"RoutePointCreater_button__3g3vV\",\"buttonDisabled\":\"RoutePointCreater_buttonDisabled__iMJ6-\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './RoutePoint.module.css';\n\nconst RoutePoint = (props) => {\n\n  const deletePoint = () => {\n    const {deletePoint, pointId} = props;\n    deletePoint(pointId);\n  };\n\n  const pathImgDelete = 'https://www.clipartmax.com/png/middle/209-2095674_trash-bin-comments-waste.png';\n\n  return (\n    <div className={styles.point}>\n      <span>{props.pointTitle}</span>\n      <img src={pathImgDelete} alt='X' className={styles.deleteImg} onClick={deletePoint} />\n    </div>\n  )\n};\n\nRoutePoint.propTypes = {\n  onDeletePoint: PropTypes.func,\n  pointId: PropTypes.number,\n  pointTitle: PropTypes.string\n};\n\nexport default RoutePoint;\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport RoutePoint from './../RoutePoint/RoutePoint';\nimport styles from './PointsList.module.css';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nconst PointsList = (props) => {\n\n  const updatePoints = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n\n    return result;\n  };\n\n  const onDragEnd = (result) => {\n    const { destination } = result;\n    const { updateListPoints } = props;\n\n    if(!destination) return;\n\n    const points = updatePoints(props.points, result.source.index, result.destination.index);\n\n    updateListPoints(points)\n  };\n\n  return(\n    <div className={styles.pointsList}>\n      <DragDropContext onDragEnd={onDragEnd}>\n        <Droppable droppableId='droppable'>\n          {providerList => (\n            <div ref={providerList.innerRef}>\n              {props.points.map((point, index) => (\n                <Draggable key={point.id} draggableId={point.id} index={index}>\n                  {providerPoint => (\n                    <div\n                      ref={providerPoint.innerRef}\n                      {...providerPoint.draggableProps}\n                      {...providerPoint.dragHandleProps}\n                    >\n                      <RoutePoint\n                        pointId={point.id}\n                        pointTitle={point.title}\n                        deletePoint={props.deletePoint}\n                        key={point.id}\n                      />\n                    </div>\n                  )}\n                </Draggable>\n              ))}\n              {providerList.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n    </div>\n  );\n};\n\nPointsList.propTypes = {\n  points: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    id: PropTypes.number,\n    marker: PropTypes.object\n  })),\n  onDeletePoint: PropTypes.func,\n  updateListPoints: PropTypes.func\n};\n\nexport default PointsList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from  './RouteFooter.module.css';\n\nconst RouteFooter = (props) => {\n\n  const {pointsLength, clearPointsList} = props;\n  return(\n    <div className={styles.routeFooter}>\n      <div>\n        {pointsLength === 0 ?\n          <span className={styles.pointsNotLength}>no current route...</span> :\n          <span className={styles.pointsLength} >{pointsLength} current route</span>\n        }\n      </div>\n\n      <div className={styles.buttons}>\n        <button\n          className={pointsLength === 0 ? styles.clearCompletedDisabled: styles.clearCompleted}\n          onClick={clearPointsList}\n        >\n          Clear list\n        </button>\n      </div>\n    </div>\n  )\n};\n\nRouteFooter.propTypes = {\n  pointsLength: PropTypes.number,\n  clearPointsList: PropTypes.func\n};\n\nexport default RouteFooter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './RoutePointCreater.module.css';\n\nconst RoutePointCreater = (props) => {\n  const { creatorPointsToEnter, creatorPointsToClick, changeInputValue, inputValue } = props;\n  return(\n    <div className={styles.wrapper}>\n      <input\n        className={styles.input}\n        onKeyPress={creatorPointsToEnter}\n        type='text'\n        onChange={changeInputValue}\n        value={inputValue}\n        placeholder='enter the route...'\n      />\n      <button\n        className={inputValue === '' ? styles.buttonDisabled : styles.button}\n        onClick={creatorPointsToClick}\n      >\n        Add Point\n      </button>\n    </div>\n  )\n}\n\nRoutePointCreater.propTypes = {\n  creatorPointsToEnter: PropTypes.func,\n  creatorPointsToClick: PropTypes.func,\n  changeInputValue: PropTypes.func,\n  inputValue: PropTypes.string\n}\n\nexport default RoutePointCreater;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst MarkerList = (props) => {\n  const renderGeoMarker = () => {\n    const { myMap, points } = props;\n\n    points.map(geo => myMap.geoObjects.add(geo.marker));\n  }\n\n  return <div>{ renderGeoMarker() }</div>\n};\n\nMarkerList.propTypes = {\n  myMap: PropTypes.object,\n  points: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    id: PropTypes.number,\n    marker: PropTypes.object\n  }))\n};\n\nexport default MarkerList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from  './RouteList.module.css';\nimport PointsList from '../PointsList/PointsList';\nimport RouteFooter from '../RouteFooter/RouteFooter';\nimport RoutePointCreater from '../RoutePointCreater/RoutePointCreater';\nimport MarkerList from '../MarkerList/MarkerList';\n\nconst RouteList = (props) => {\n  const {\n    points,\n    deletePoint,\n    clearPointsList,\n    creatorPointsToEnter,\n    myMap,\n    updateListPoints,\n    inputValue,\n    creatorPointsToClick,\n    changeInputValue} = props;\n\n  return(\n    <div className={styles.list}>\n      <RoutePointCreater\n        creatorPointsToEnter={creatorPointsToEnter}\n        creatorPointsToClick={creatorPointsToClick}\n        changeInputValue={changeInputValue}\n        inputValue={inputValue}\n      />\n      <PointsList\n        points={points}\n        deletePoint={deletePoint}\n        updateListPoints={updateListPoints}\n      />\n\n      <MarkerList\n        myMap={myMap}\n        points={points}\n      />\n\n      <RouteFooter\n        pointsLength={points.length}\n        clearPointsList={clearPointsList}\n      />\n    </div>\n  )\n}\n\nRouteList.propTypes = {\n  points: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    id: PropTypes.number,\n    marker: PropTypes.object\n  })),\n  deletePoint: PropTypes.func,\n  clearPointsList: PropTypes.func,\n  pointsLength: PropTypes.number,\n  creatorPoints: PropTypes.func,\n  addToMap: PropTypes.func,\n  updateListPoints: PropTypes.func,\n  changeInputValue: PropTypes.func,\n  inputValue: PropTypes.string\n};\n\nexport default RouteList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Script from 'react-load-script';\nimport styles from './MapComponent.module.css';\n\nconst MapComponent = (props) => {\n\n  const handleScriptLoad = () => {\n    const {ymaps} = window;\n    ymaps.ready(init);\n  }\n\n  const init = () => {\n    const {ymaps} = window;\n    const {loadMap} = props;\n    const myMap = new ymaps.Map('map', {\n      center: [55.76, 37.64],\n      zoom: 5,\n      controls: []\n    });\n\n    loadMap(myMap)\n  }\n\n  return (\n    <div>\n      <Script\n        url=\"https://api-maps.yandex.ru/2.1/?&lang=ru_RU\"\n        onLoad={handleScriptLoad}\n      />\n      <div id='map' className={styles.containerMap}></div>\n    </div>\n  )\n};\n\nMapComponent.propTypes = {\n  loadMap: PropTypes.func\n}\n\nexport default MapComponent;\n","import React from 'react';\nimport RouteList from '../RouteList/RouteList';\nimport MapComponent from './../MapComponent/MapComponent';\nimport styles from './Main.module.css';\n\nclass Main extends React.Component {\n\n  state = {\n    points : [],\n    inputValue: ''\n  };\n\n  addPointToState = (point) => this.setState( {points: [...this.state.points, point ]}, this.updatePolyline );\n\n  clearPointsList = () => {\n    const points = [];\n\n    this.setState({ points });\n    this.deleteGeoObjects();\n  };\n\n  deletePoint = (pointId) => {\n    const points = this.state.points.filter(point => point.id !== pointId);\n\n    this.setState({ points }, this.updatePolyline);\n    this.deleteGeoObjects();\n  };\n\n  deleteGeoObjects = () => {\n    this.myMap.geoObjects.removeAll();\n  };\n\n  getId = () => {\n    const { points } = this.state;\n    const biggest = points.reduce((acc, el) => Math.max(acc, el.id), 0);\n    return biggest + 1;\n  };\n\n  changeInputValue = (event) => {\n    this.setState({inputValue: event.currentTarget.value})\n  };\n\n  clearInputValue = () => this.setState({ inputValue: '' });\n\n  createNewPoint = (event) => {\n    const {inputValue} = this.state;\n    const id = this.getId();\n    const newPoint = {\n      title: inputValue,\n      id,\n      marker: this.createNewGeoObject(event),\n    };\n\n    this.addPointToState(newPoint);\n  };\n\n  createNewGeoObject = () => {\n    const {inputValue} = this.state;\n    const {ymaps} = window;\n    const centerMap = this.myMap.getCenter();\n    const newGeoObject = new ymaps.GeoObject({\n      geometry: {\n        type: 'Point',\n        coordinates: centerMap\n      },\n      properties: {\n        iconContent: inputValue,\n        balloonContent: inputValue\n      }\n    }, {\n      preset: 'islands#blackStretchyIcon',\n      draggable: true\n    });\n\n    newGeoObject.events.add('drag', this.updatePolyline);\n\n    return newGeoObject;\n  };\n\n  creatorPointsToEnter = (event) => {\n    const {inputValue} = this.state;\n\n    if(event.key === 'Enter') {\n      if(inputValue === '') return;\n\n      this.createNewPoint();\n      this.clearInputValue();\n    };\n  };\n\n  creatorPointsToClick = () => {\n    const {inputValue} = this.state;\n\n    if(inputValue === '') return;\n\n    this.createNewPoint();\n    this.clearInputValue();\n  }\n\n  loadMap = (myMap) => this.myMap = myMap;\n\n  createPolyline = () => {\n    const { ymaps } = window;\n    const { points } = this.state;\n    const coordinates = points.map(geo => geo.marker.geometry.getCoordinates());\n\n    this.polyline = new ymaps.Polyline(coordinates, {}, {strokeColor: '#999', strokeWidth: 3});\n  };\n\n  updatePolyline = () => {\n    if(this.polyline) {\n      this.deletePolyline(this.polyline);\n    };\n\n    this.createPolyline();\n    this.addPolylineForMap(this.polyline);\n  };\n\n  deletePolyline = (polyline) => {\n    this.myMap.geoObjects.remove(polyline);\n  };\n\n  addPolylineForMap = (polyline) => {\n    this.myMap.geoObjects.add(polyline);\n  };\n\n  updateListPoints = (newListPoints) => {\n    const points = newListPoints.map(point => ({\n      title: point.title,\n      id: point.id,\n      marker: point.marker,\n    }));\n\n    this.setState({ points }, this.updatePolyline)\n  }\n\n  render() {\n    return (\n      <div className={styles.main}>\n        <div>\n          <RouteList\n            points={this.state.points}\n            deletePoint={this.deletePoint}\n            clearPointsList={this.clearPointsList}\n            creatorPointsToEnter={this.creatorPointsToEnter}\n            creatorPointsToClick={this.creatorPointsToClick}\n            updateListPoints={this.updateListPoints}\n            changeInputValue={this.changeInputValue}\n            inputValue={this.state.inputValue}\n            myMap={this.myMap}\n          />\n        </div>\n        <div>\n          <MapComponent\n            loadMap={this.loadMap}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Main;\n","import React from 'react';\nimport Main from '../Main/Main';\n\nconst App = () => {\n  return(\n    <div>\n      <Main />\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}